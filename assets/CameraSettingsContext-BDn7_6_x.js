import{a as s,p as u}from"./chunk-B7RQU5TL-xj-QjgGV.js";const i={videoConstraints:{width:1920,height:1080,facingMode:"environment"},forceScreenshotSourceSize:!0,screenshotQuality:.9,screenshotFormat:"image/jpeg",imageSmoothing:!1,focusDelay:1},c=s.createContext(void 0);function p({children:r}){const[o,a]=s.useState(i),[n,g]=s.useState(!0);s.useEffect(()=>{try{const t=localStorage.getItem("settings");if(t){const e=JSON.parse(t);e.camera&&a(f=>({...i,...e.camera}))}}catch(t){console.error("Error loading camera settings from localStorage:",t)}finally{g(!1)}},[]),s.useEffect(()=>{if(!n)try{const t=localStorage.getItem("settings"),e=t?JSON.parse(t):{};localStorage.setItem("settings",JSON.stringify({...e,camera:o}))}catch(t){console.error("Error saving camera settings to localStorage:",t)}},[o,n]);const S={settings:o,updateSettings:t=>{a(e=>({...e,...t}))},resetToDefaults:()=>{a(i)},isLoading:n};return u.jsx(c.Provider,{value:S,children:r})}function h(){const r=s.useContext(c);if(r===void 0)throw new Error("useCameraSettings must be used within a CameraSettingsProvider");return r}export{p as C,h as u};
